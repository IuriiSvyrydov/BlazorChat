@page "/login"


<div class="login-container">
    <div class="row justify-content-center align-items-start h-100">
        <div class="login-form">
            <EditForm Model="@_loginUserCommand" OnInvalidSubmit="LoginProcess">
                <DataAnnotationsValidator/>
                @if (errorText != string.Empty)
                {
                    <span class="text-danger">@errorText</span>
                    <br/>
                }
                
                <div class="form-group">
                    <input @bind-value="_loginUserCommand.EmailAddress" class="form-control" type="text" placeholder="Email Address"/>
                </div>
                <br/>
                <div class="form-group">
                    <input @bind-value="_loginUserCommand.Password" class="form-control" type="password" placeholder="password"/>
                </div>
                <br/>
                <div class="form-group">
                    <button class="btn-success btn btn-chat" > Login</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code
{
    [Inject] public IIdentityService IdentityService { get; set; }
    [Inject]public NavigationManager NavigationManager { get; set; }
    private string errorText = "";
    private LoginUserCommand _loginUserCommand = new ( );

    public async Task LoginProcess()
    {
        try
        {
            var res = await IdentityService.Login(_loginUserCommand);
            Console.WriteLine("Clicked");
            if (res)
            {
                errorText = "";
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorText = "Login failed with unknown reasons";
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorText = e.Message;
        }
     
    }
}
