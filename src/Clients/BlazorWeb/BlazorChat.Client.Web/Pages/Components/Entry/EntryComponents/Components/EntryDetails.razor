@page "/entry/details/{id:guid}"
@if (entryDetail is not  null)
{
    <EntryViewerComponent Entry="@entryDetail"/>
    <br/>
    if (comments is not  null)
    {
        foreach (var comment in comments.Results)
        {
            <EntryCommentViewComponent EntryComment="@comment"/>   
        }  
    }
    <br/>

    //TODO Pagination
    <AuthorizeView>
        <Authorized>
            <br/><br/>
            <CreateEntryCommentComponent EntryId="@entryDetail.Id"
                                         EntrySubject="@entryDetail.Subject"
                                         OnClicked="OnCommentCreate"/>
        </Authorized>
    </AuthorizeView>
}

@code {

    [Parameter]public Guid Id { get; set; }
    [Inject]IEntryService EntryService { get; set; }
    private GetEntryDetailViewModel entryDetail = new();
    private PageViewModel<GetEntryCommentsViewModel> comments = new();
    private int currentPage = 1;
    protected override async Task OnParametersSetAsync()
    {
        entryDetail = await EntryService.GetEntryDetail(Id);
        await RefrehComments(1);
        currentPage = comments.PageInfo.CurrentPage;
        
    }

    private async Task OnCommentCreate(CreateEntryCommentCommand command)
    {
        await EntryService.CreateEntryComment(command);
        await RefrehComments(currentPage);
    }

    private async Task RefrehComments(int pageNumber)
    {
        comments = await EntryService.GetEntryComments(entryDetail.Id, pageNumber, 10);
    }
}     
